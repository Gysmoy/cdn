class gImage{static async mini(e){var t,a;if(e.files.length<0)return;let n=e.files[0],l=n.type,i=n.size,r=await (t=n,a=1e4/i,new Promise((e,n)=>{let i=document.createElement("canvas"),r=new Image;r.onload=()=>{i.width=r.width,i.height=r.height,i.getContext("2d").drawImage(r,0,0),i.toBlob(t=>{if(null===t)return n(t);e(t)},l,a)},r.src=URL.createObjectURL(t)}));return r}static async full(e){var t,a;if(e.files.length<0)return;let n=e.files[0],l=n.type,i=n.size,r=await (t=n,a=1e5/i,new Promise((e,n)=>{let i=document.createElement("canvas"),r=new Image;r.onload=()=>{i.width=r.width,i.height=r.height,i.getContext("2d").drawImage(r,0,0),i.toBlob(t=>{if(null===t)return n(t);e(t)},l,a)},r.src=URL.createObjectURL(t)}));return r}static blobToBase64=async(e,t=()=>{})=>new Promise((a,n)=>{let l=new FileReader;l.onloadend=()=>{t(l.result),a(l.result)},l.readAsDataURL(e)});static async compress({blob:e,full_length:t=1e3,mini_length:a=100,callback:n=()=>{}}){let l=!0,i=e.type,r=null,s=null;try{let c=new Image;c.width=t,c.height=t,c.src=await this.blobToBase64(e),c.style.objectFit="cover",c.style.objectPosition="center center",await c.onload;let o=document.createElement("canvas");o.width=t,o.height=t,o.style.objectFit="cover",o.style.objectPosition="center center";o.getContext("2d").drawImage(c,0,0,t,t),r=o.toDataURL(i).split(",")[1];let $=document.createElement("canvas");$.width=a,$.height=a;$.getContext("2d").drawImage(c,0,0,a,a),s=$.toDataURL(i).split(",")[1]}catch(h){console.error(h),l=!1}finally{return n({ok:l,image_type:i,image_full:r,image_mini:s}),{ok:l,image_type:i,image_full:r,image_mini:s}}}}