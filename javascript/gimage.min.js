class gImage{static async mini(e){var t,a;if(e.files.length<0)return;let n=e.files[0],l=n.type,i=n.size,r=await (t=n,a=1e4/i,new Promise((e,n)=>{let i=document.createElement("canvas"),r=new Image;r.onload=()=>{i.width=r.width,i.height=r.height,i.getContext("2d").drawImage(r,0,0),i.toBlob(t=>{if(null===t)return n(t);e(t)},l,a)},r.src=URL.createObjectURL(t)}));return r}static async full(e){var t,a;if(e.files.length<0)return;let n=e.files[0],l=n.type,i=n.size,r=await (t=n,a=1e5/i,new Promise((e,n)=>{let i=document.createElement("canvas"),r=new Image;r.onload=()=>{i.width=r.width,i.height=r.height,i.getContext("2d").drawImage(r,0,0),i.toBlob(t=>{if(null===t)return n(t);e(t)},l,a)},r.src=URL.createObjectURL(t)}));return r}static async blobToBase64(e){return new Promise((t,a)=>{let n=new FileReader;n.onloadend=()=>t(n.result),n.readAsDataURL(e)})}static async compress({blob:e,full_length:t=1e3,mini_length:a=100}){let n=!0,l=e.type,i=null,r=null;try{let s=new Image;s.width=t,s.height=t,s.src=await this.blobToBase64(e),s.style.objectFit="cover",s.style.objectPosition="center center",await s.onload;let c=document.createElement("canvas");c.width=t,c.height=t,c.style.objectFit="cover",c.style.objectPosition="center center";c.getContext("2d").drawImage(s,0,0,t,t),i=c.toDataURL(l).split(",")[1];let o=document.createElement("canvas");o.width=a,o.height=a;o.getContext("2d").drawImage(s,0,0,a,a),r=o.toDataURL(l).split(",")[1]}catch($){console.error($),n=!1}finally{return{ok:n,image_type:l,image_full:i,image_mini:r}}}}