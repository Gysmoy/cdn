class Clipboard { static copy = (t, e = () => { }, a = () => { }) => { navigator.clipboard.writeText(t).then(e).catch(a) }; static paste(t, e = () => { }, a = {}) { let n = "string" == typeof t ? document.querySelector(t) : t, r = {}; for (let l in a) { let i = n.getAttribute(l); r[l] = i } function f() { for (let t in r) try { n.setAttribute(t, r[t]) } catch (e) { console.warn(e) } } n.addEventListener("paste", function t(a) { let n = a.clipboardData.files; if (n.length) { a.preventDefault(); let r = []; for (let l = 0; l < n.length; l++)r.push(n.item(l)); e(r) } else e(null) }), n.addEventListener("drop", function t(a) { a.preventDefault(), f(); let r = n.value; if (n.value = r + a.dataTransfer.getData("text"), a.dataTransfer.items) { var l = [...a.dataTransfer.items]; if (0 == l.length || 0 == (l = l.filter(t => "file" === t.kind)).length) { e(null); return } e(l.map(t => t.getAsFile())) } else e([...a.dataTransfer.files]) }), n.addEventListener("dragover", function t(e) { e.preventDefault(), function t() { for (let e in a) try { n.setAttribute(e, a[e]) } catch (r) { console.warn(r) } }() }), n.addEventListener("dragleave", function t(e) { e.preventDefault(), f() }) } }